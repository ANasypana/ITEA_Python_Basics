Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> 7*9
63
>>> 20 // 3
6
>>> r=9
>>> -r
-9
>>> 9/3
3.0
>>> 8//5
1
>>> 8%5
3
>>> abs(-r)
9
>>> divmod(8,5)
(1, 3)
>>> pow(2,4)
16
>>> 0.1+0.1+0.1
0.30000000000000004
>>> a=3**1000
>>> a+0.1
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
OverflowError: int too large to convert to float
>>> c=150
>>> d=12.9
>>> c+d
162.9
>>> p=abs(d-c)
>>> print(p)
137.1
>>> round(p)
137
>>> S='spam"s'
>>> S
'spam"s'
>>> S="spam's"
>>> S
"spam's"
>>> \n
  File "<stdin>", line 1
    \n
     ^
SyntaxError: unexpected character after line continuation character
>>> 'aaaa'\n'sss'
  File "<stdin>", line 1
    'aaaa'\n'sss'
                ^
SyntaxError: unexpected character after line continuation character
>>> S=r'C:\newt.txt
  File "<stdin>", line 1
    S=r'C:\newt.txt
                  ^
SyntaxError: EOL while scanning string literal
>>> S=r'\n\n\\'[:1]
>>> print(S)
\
>>> S=r'\n\n'+'\\'
>>> print(S)
\n\n\
>>> c="это очень большая
  File "<stdin>", line 1
    c="это очень большая
                        ^
SyntaxError: EOL while scanning string literal
>>> с='это очень большая строка\nмногострочній текст'
>>> c
150
>>> print(c)
150
>>> cn
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cn' is not defined
>>> S1='spam'
>>> S2='eggs'
>>> print(S1+S2)
spameggs
>>> print('spam'*3)
spamspamspam
>>> len('S1+S2)
  File "<stdin>", line 1
    len('S1+S2)
              ^
SyntaxError: EOL while scanning string literal
>>> lel(S1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'lel' is not defined
>>> len('spam')
4
>>> S='spam'
>>> S[0]
's'
>>> S[2]
'a'
>>> S[-2]
'a'
>>> S[-1}
  File "<stdin>", line 1
    S[-1}
        ^
SyntaxError: invalid syntax
>>> S[-1]
'm'
>>> s='abcde'
>>> s[1:2]
'b'
>>> s[1:4]
'bcd'
>>> s[1:-2]
'bc'
>>> s[:4]
'abcd'
>>> s[1:]
'bcde'
>>> s[::-1]
'edcba'
>>> s[2:3:-1]
''
>>> s[2::2]
'ce'
>>> s[1::1]
'bcde'
>>> s[2]='f'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> s=s[0]+'f'+s[:2]
>>> s
'afab'
>>> s*3
'afabafabafab'
>>> s.find(s,2,1)
-1
>>> S.find('abcde',1,3)
-1
>>> s='abcd'
>>> s[1]
'b'
>>> s[1:3:1]
'bc'
>>> s[1:3]
'bc'
>>> s[1:4]
'bcd'
>>> s[1:3:2]
'b'
>>> s[1:4:2]
'bd'
>>> s.find('cd')
2
>>> s.replace('ab','f')
'fcd'
>>> print(s)
abcd
>>> S.upper
<built-in method upper of str object at 0x05670980>
>>> s.upper
<built-in method upper of str object at 0x05670BA0>
>>> if_name_=='_main_':
  File "<stdin>", line 1
    if_name_=='_main_':
                      ^
SyntaxError: invalid syntax
>>> if __name__ == '__main__':
...    print('Enter your name: ')
...    name = input()
...    print('Hello, ', name)
... if__name__=='__main__': print('Enter your name:') name=input() print('Hello, ',name)
  File "<stdin>", line 5
    if__name__=='__main__': print('Enter your name:') name=input() print('Hello, ',name)
             ^
SyntaxError: invalid syntax
>>> if __name__=='__main__'
  File "<stdin>", line 1
    if __name__=='__main__'
                          ^
SyntaxError: invalid syntax
>>> print('Enter your name:')
Enter your name:
>>> input()
FFF
'FFF'
>>> if__name__=='__main__'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'if__name__' is not defined
>>> print('Enter your name:') name=input() print('Hello, ',name)
  File "<stdin>", line 1
    print('Enter your name:') name=input() print('Hello, ',name)
                                 ^
SyntaxError: invalid syntax
>>> name=input()
All
>>> print('Hello, ',name)
Hello,  All
>>> if__name__=='__main__'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'if__name__' is not defined
>>> print('Enter your name:')
Enter your name:
>>> name=input()
All
>>> print('Hello, ',name)
Hello,  All
>>> print('Enter a:')
Enter a:
>>> a=input()
6
>>> print('Enter b:')
Enter b:
>>> b=input()
4
>>> print('Result:',a+b)
Result: 64
>>> print('Enter a:')
Enter a:
>>> a=int(input())
5
>>> print('Enter b:')
Enter b:
>>> b=int(input())
4
>>> print('Result:',a+b)
Result: 9
>>> a=[1,2,3,4,15]
>>> print(a)
[1, 2, 3, 4, 15]
>>> a.append(100)
>>> print(a)
[1, 2, 3, 4, 15, 100]
>>> a.remove(4)
>>> print(a)
[1, 2, 3, 15, 100]
>>> a[0]=50
>>> print(a)
[50, 2, 3, 15, 100]
>>>
